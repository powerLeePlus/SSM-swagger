<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 开启spring组件扫描 -->
    <context:component-scan base-package="lwq.java.web.ssm_swagger"/>

    <!-- SpringMVC注解支持 -->
    <mvc:annotation-driven/>

    <!-- 数据库连接池 -->
    <util:properties id="jdbc" location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="#{jdbc.driver}"/>
        <property name="url" value="#{jdbc.url}"/>
        <property name="username" value="#{jdbc.username}"/>
        <property name="password" value="#{jdbc.password}"/>

    </bean>

    <!-- spring集成mybatis -->
    <!-- 可以定义一些属性来指定Mybatis框架的配置信息 -->
    <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描mappper xml -->
        <property name="mapperLocations" value="classpath:sqlmapper/UserMapper.xml"/>
        <!-- 扫描entity 包，这样在mapper xml中就可以使用简单类名 -->
        <property name="typeAliasesPackage"
                  value="lwq.java.web.ssm_swagger.entity"/>
    </bean>

    <!-- 配置MapperScannerConfigurer -->
    <!-- 扫描dao接口，自动注入Dao实现类，无须手动实现 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描的dao -->
        <property name="basePackage" value="lwq.java.web.ssm_swagger.dao"/>
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="ssf"/>
    </bean>

    <!--将静态资源交由默认的servlet处理-->
    <mvc:default-servlet-handler />
    <!--配置swagger资源不被拦截-->
    <!--<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
    <mvc:resources mapping="/**" location="classpath:/META-INF/resources/"/>-->
</beans>